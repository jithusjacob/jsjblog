<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IDE on jsj&#39;s notebook</title>
    <link>http://localhost:1313/tags/ide/</link>
    <description>Recent content in IDE on jsj&#39;s notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Aug 2021 09:49:50 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fluter IDE with Neovim 0.5 ,built in LSP and lua on windows</title>
      <link>http://localhost:1313/post/fluter_ide_with_lua_lsp_neovim_0.5/</link>
      <pubDate>Mon, 02 Aug 2021 09:49:50 +0530</pubDate>
      <guid>http://localhost:1313/post/fluter_ide_with_lua_lsp_neovim_0.5/</guid>
      <description>Introduction So I recently upgraded to NeoVim 0.5 stable release.This release has a inbuilt LSP(Language server protocol) which is a client to LSP servers.It also includes a Lua framework for building enhanced LSP tools.&#xA;I used coc-nvim earlier as LSP client to interact with Dart LSP server which it does automatically using coc-flutter extension.If you want to know how to do that read my previous blog post for more details.</description>
    </item>
    <item>
      <title>Setup Vim as a Flutter IDE using coc-nvim on windows</title>
      <link>http://localhost:1313/post/vim_flutter_ide/</link>
      <pubDate>Tue, 15 Jun 2021 15:41:34 +0530</pubDate>
      <guid>http://localhost:1313/post/vim_flutter_ide/</guid>
      <description>I recently started using Neovim as my text editor.Also right now I am learning Flutter to create a mobile application for my personal project. So I decided to setup Neovim as a Flutter IDE.With this I can practice Vim with Flutter.&#xA;Install Plugins To setup Neovim as Flutter IDE we need to use coc.nvim plugin .Also for formatting, I am using the dart_vim_plugin.We also need the snippets to be loaded like the ones for stateless/stateful widget.</description>
    </item>
  </channel>
</rss>
